{"version":3,"sources":["components/NewTaskForm.jsx","components/TaskFilter.jsx","components/Footer.jsx","components/Task.jsx","components/TaskList.jsx","components/App.jsx","index.js"],"names":["NewTaskForm","props","onSubmit","onSubmitTask","className","onChange","onChangeValue","value","valueTask","placeholder","autoFocus","filters","TaskFilter","onClick","e","preventDefault","onFilterNameChange","target","name","renderFilterButtons","filterState","filterName","classNames","key","type","data-test","state","isClick","this","map","el","React","Component","Footer","countItems","onClearCompleted","Task","setState","editValue","onSaveTask","title","currentTarget","id","onSaveEditing","editMode","onEditeMode","task","text","checked","isChecking","onMarkCompleted","formatDistanceToNow","Date","created","includeSeconds","onDeleted","onBlur","TaskList","filteredTasks","tasks","filter","t","tasksList","length","App","event","newTask","_","uniqueId","now","index","findIndex","oldTask","slice","currentId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c8b4afa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst NewTaskForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.onSubmitTask}>\r\n      <input className=\"new-todo\"\r\n            onChange={props.onChangeValue}\r\n            value={props.valueTask}\r\n            placeholder=\"What needs to be done?\"\r\n            autoFocus />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewTaskForm;","import React from 'react';\r\n\r\nconst filters = [['all', 'All'], ['active', 'Active'], ['finished', 'Completed']];\r\n\r\nclass TaskFilter extends React.Component {\r\n\t\r\n\tstatic filterName = this.props;\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state ={\r\n\t\t\tisClick: this.props.filterState,\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\tonClick = (e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.onFilterNameChange(e.target.name);\r\n\t}\r\n\t\r\n\r\n\trenderFilterButtons = ([filterName, name], filterState) => {\r\n\t\tconst classNames = filterName === filterState ? 'selected' : '';\r\n\t\treturn (\r\n\t\t\t<li key={filterName}>\r\n\t\t\t\t<button type=\"button\"\r\n\t\t\t\t\t\t\t\tclassName={classNames}\r\n\t\t\t\t\t\t\t\tname={filterName}\r\n\t\t\t\t\t\t\t\tdata-test={`task-filter-${filterName}`}\r\n\t\t\t\t\t\t\t\tonClick={this.onClick}\r\n\t\t\t\t>\r\n\t\t\t\t\t{name}\r\n\t\t\t\t</button>\r\n\t\t\t</li>\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst filterState = this.props.filterState;\r\n\t\treturn (\r\n\t\t\t<ul className=\"filters\">\r\n\t\t\t\t{filters.map(el => this.renderFilterButtons(el, filterState))}\r\n\t\t\t</ul>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default TaskFilter;\r\n\r\n/* class TaskFilter extends React.Component {\r\n\t\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<ul className=\"filters\">\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<button className=\"selected\">All</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<button>Active</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<button>Completed</button>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t);\r\n\t}\r\n}\r\n */\t\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport TaskFilter from './TaskFilter';\r\n\r\nconst Footer = (props) => {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span className=\"todo-count\">\r\n\t\t\t\t\t{props.countItems} items left\r\n\t\t\t</span>\r\n\t\t\t<TaskFilter filterState={props.filterState}\r\n\t\t\t\t\t\tonFilterNameChange={props.onFilterNameChange}/>\r\n\t\t\t<button className=\"clear-completed\"\r\n\t\t\t\t\tonClick={props.onClearCompleted}>\r\n\t\t\t\t\tClear completed</button>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { formatDistanceToNow } from 'date-fns';\r\n\r\nclass Task extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\teditMode: false,\r\n\t\t\teditValue: `${props.task.text}`\r\n\t\t}\r\n\t}\r\n\r\n\tonChange = (e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.setState({ editValue: e.target.value });\r\n\t}\r\n\r\n\tonSaveTask = (e) => {\r\n\t\tconst title = e.currentTarget.value;\r\n\t\tconst id = e.currentTarget.name;\r\n\t\tthis.props.onSaveEditing(id, title);\r\n\t\tthis.setState({ editMode: !this.state.editMode });\r\n\r\n\t}\r\n\r\n\tonEditeMode = () => {\r\n\t\tthis.setState({ editMode: !this.state.editMode });\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst { task } = this.props;\r\n\t\t\r\n\t\tlet classNames = '';\r\n\t\tif (task.state === 'finished') {\r\n\t\t\tclassNames = 'completed';\r\n\t\t} else {\r\n\t\t\tclassNames = ''\r\n\t\t}\r\n\r\n\t\tif (this.state.editMode) {\r\n\t\t\tclassNames = 'editing';\r\n\t\t}\r\n        \r\n    return (\r\n        <li className={classNames}>\r\n            <div className=\"view\">\r\n              <input className=\"toggle\"\r\n                    type=\"checkbox\"\r\n                    name={task.id}\r\n                    checked={task.isChecking}\r\n                    onChange={this.props.onMarkCompleted} />\r\n              <label>\r\n                  <span className=\"description\">\r\n                      {task.text}\r\n                  </span>\r\n                  <span className=\"created\">\r\n                      created&nbsp;\r\n                      {formatDistanceToNow(\r\n                          new Date(task.created),\r\n                          {includeSeconds: true})}\r\n                        &nbsp;ago</span>\r\n              </label>\r\n              <button className=\"icon icon-edit\" name={task.id} onClick={this.onEditeMode}></button>\r\n              <button className=\"icon icon-destroy\" onClick={this.props.onDeleted}></button>\r\n            </div>\r\n\t\t\t\t\t\t{this.state.editMode && \r\n\t\t\t\t\t\t\t<input type=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"edit\"\r\n\t\t\t\t\t\t\t\t\t\tname={task.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.editValue}\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t\t\tonBlur={this.onSaveTask}\r\n\t\t\t\t\t\t\t\t\t\tautoFocus />\r\n\t\t\t\t\t\t}\r\n        </li>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Task;","import React from 'react';\r\n\r\nimport Task from './Task';\r\n\r\nclass TaskList extends React.Component {\r\n  /* static defaultProps = {\r\n    filterName: 'all'\r\n  } */\r\n  /* constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editMode: false\r\n    }\r\n  } */\r\n\r\n  \r\n\r\n\r\n\r\n  filteredTasks = (tasks, filterState) => {\r\n    const newTasksList = filterState === 'all' ? tasks : tasks.filter((t) => t.state === filterState);\r\n    return newTasksList;\r\n  }\r\n\r\n\r\n  render() {\r\n    const { tasksList, onDeleted, onMarkCompleted, filterState } = this.props;\r\n    const tasks = this.filteredTasks(tasksList, filterState);\r\n    return (\r\n      <ul className=\"todo-list\">\r\n        {\r\n          tasks.length > 0 &&\r\n            tasks.map((task) => {\r\n              return (\r\n                <Task onDeleted={onDeleted(task.id)}\r\n                    onMarkCompleted={onMarkCompleted}\r\n                    task={task}\r\n                    key={task.id}\r\n                    onSaveEditing={this.props.onSaveEditing} />\r\n              )\r\n          })\r\n        }\r\n      </ul>\r\n    );\r\n  }\r\n};\r\n\r\nexport default TaskList;\r\n\r\n/* class TaskList extends React.Component {\r\n  \r\n  render() {\r\n    const { tasksList, onDeleted, onMarkCompleted } = this.props;\r\n    \r\n    return (\r\n      <ul className=\"todo-list\">\r\n        {\r\n          tasksList.length > 0 &&\r\n            tasksList.map((task) => {\r\n              return (\r\n                <Task onDeleted={onDeleted(task.id)}\r\n                    onMarkCompleted={onMarkCompleted}\r\n                    task={task}\r\n                    key={task.id} />\r\n              )\r\n          })\r\n        }\r\n      </ul>\r\n    );\r\n  }\r\n}; */","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nimport NewTaskForm from './NewTaskForm';\r\nimport Footer from './Footer';\r\nimport TaskList from './TaskList';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      valueTask: '',\r\n      tasksList: [],\r\n      filterState: 'all',\r\n    }\r\n  }\r\n\r\n  // ГОТОВЫЕ ФУНКЦИИ - начало\r\n  onChangeValue = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ valueTask: event.target.value });\r\n  }\r\n\r\n  onSubmitTask = (event) => {\r\n    event.preventDefault();\r\n    const { valueTask } = this.state;\r\n    const newTask = {\r\n      id: _.uniqueId(),\r\n      text: valueTask,\r\n      state: 'active',\r\n      isChecking: false,\r\n      created: Date.now()\r\n    };\r\n    this.setState(({ tasksList }) => {\r\n      const newList = [ newTask, ...tasksList ];\r\n      return {\r\n        tasksList: newList,\r\n        valueTask: ''\r\n      };\r\n    });\r\n  }\r\n\r\n  onMarkCompleted = (event) => {\r\n    const name = event.target.name;\r\n    this.setState(({tasksList}) => {\r\n      const index = tasksList.findIndex((task) => task.id === name);\r\n      const oldTask = tasksList[index];\r\n      const newTask = { \r\n        ...oldTask,\r\n        state: oldTask.state === 'active' ? 'finished' : 'active',\r\n        isChecking: !oldTask.isChecking\r\n      };\r\n      const newList = [\r\n        ...tasksList.slice(0, index),\r\n        newTask,\r\n        ...tasksList.slice(index + 1)\r\n      ];\r\n      return { tasksList: newList };\r\n    });\r\n  };\r\n\r\n  onDeleted = (currentId) => (event) => {\r\n    event.preventDefault();\r\n    this.setState(({tasksList}) => {\r\n      const newList = tasksList.filter((task) => task.id !== currentId);\r\n      return { tasksList: newList };\r\n    });\r\n  };\r\n\r\n  onClearCompleted = () => {\r\n    this.setState(({tasksList}) => {\r\n      const newList = tasksList.filter((task) => task.state === 'active');\r\n      return { tasksList: newList };\r\n    });\r\n  };\r\n\r\n  onFilterNameChange = (name) => {\r\n    this.setState({filterState: name});\r\n  }\r\n  \r\n  onSaveEditing = (id, title) => {\r\n    this.setState(({tasksList}) => {\r\n      const index = tasksList.findIndex((task) => task.id === id);\r\n      const oldTask = tasksList[index];\r\n      const newTask = { \r\n        ...oldTask,\r\n        text: title\r\n      };\r\n      const newList = [\r\n        ...tasksList.slice(0, index),\r\n        newTask,\r\n        ...tasksList.slice(index + 1)\r\n      ];\r\n      return { tasksList: newList };\r\n    });\r\n  };\r\n\r\n\r\n  // ГОТОВЫЕ ФУНКЦИИ - конец\r\n\r\n  render() {\r\n    const { tasksList } = this.state;\r\n    const countItems = tasksList.filter((task) => task.state === 'active').length;\r\n\r\n    return (\r\n      <section className=\"todoapp\">\r\n        <header className=\"header\">\r\n          <h1>todos</h1>\r\n            <NewTaskForm onChangeValue={this.onChangeValue}\r\n                        onSubmitTask={this.onSubmitTask}\r\n                        valueTask={this.state.valueTask} />\r\n        </header>\r\n        <section className=\"main\">\r\n          <TaskList tasksList={this.state.tasksList}\r\n                    onDeleted={this.onDeleted}\r\n                    onMarkCompleted={this.onMarkCompleted}\r\n                    filterState={this.state.filterState}\r\n                    \r\n                    //editMode={this.state.editMode}\r\n                    onSaveEditing={this.onSaveEditing} />\r\n          <Footer countItems={countItems}\r\n                  onClearCompleted={this.onClearCompleted}\r\n                  filterState={this.state.filterState}\r\n                  onFilterNameChange={this.onFilterNameChange} />\r\n        </section>  \r\n      </section>\r\n    );\r\n  }\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nimport './style.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}