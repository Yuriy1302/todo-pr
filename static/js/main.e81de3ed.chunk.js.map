{"version":3,"sources":["components/NewTaskForm.jsx","components/TaskFilter.jsx","components/Footer.jsx","components/Task.jsx","components/TaskList.jsx","components/App.jsx","index.js"],"names":["NewTaskForm","props","onSubmit","onSubmitTask","className","onChange","onChangeValue","value","valueTask","placeholder","autoFocus","filters","TaskFilter","onClick","e","preventDefault","onFilterNameChange","target","name","renderFilterButtons","filterState","filterName","classNames","key","type","data-test","state","isClick","this","map","el","React","Component","Footer","console","log","countItems","onClearCompleted","Task","task","id","checked","isChecking","onMarkCompleted","text","formatDistanceToNow","Date","created","includeSeconds","onDeleted","TaskList","filteredTasks","tasks","filter","t","tasksList","length","App","event","setState","newTask","_","uniqueId","now","index","findIndex","oldTask","slice","currentId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e81de3ed.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst NewTaskForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.onSubmitTask}>\r\n      <input className=\"new-todo\"\r\n            onChange={props.onChangeValue}\r\n            value={props.valueTask}\r\n            placeholder=\"What needs to be done?\"\r\n            autoFocus />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewTaskForm;","import React from 'react';\r\n\r\nconst filters = [['all', 'All'], ['active', 'Active'], ['finished', 'Completed']];\r\n\r\nclass TaskFilter extends React.Component {\r\n\t\r\n\tstatic filterName = this.props;\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state ={\r\n\t\t\tisClick: this.props.filterState,\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\tonClick = (e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.onFilterNameChange(e.target.name);\r\n\t}\r\n\t\r\n\r\n\trenderFilterButtons = ([filterName, name], filterState) => {\r\n\t\tconst classNames = filterName === filterState ? 'selected' : '';\r\n\t\treturn (\r\n\t\t\t<li key={filterName}>\r\n\t\t\t\t<button type=\"button\"\r\n\t\t\t\t\t\t\t\tclassName={classNames}\r\n\t\t\t\t\t\t\t\tname={filterName}\r\n\t\t\t\t\t\t\t\tdata-test={`task-filter-${filterName}`}\r\n\t\t\t\t\t\t\t\tonClick={this.onClick}\r\n\t\t\t\t>\r\n\t\t\t\t\t{name}\r\n\t\t\t\t</button>\r\n\t\t\t</li>\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst filterState = this.props.filterState;\r\n\t\treturn (\r\n\t\t\t<ul className=\"filters\">\r\n\t\t\t\t{filters.map(el => this.renderFilterButtons(el, filterState))}\r\n\t\t\t</ul>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default TaskFilter;\r\n\r\n/* class TaskFilter extends React.Component {\r\n\t\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<ul className=\"filters\">\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<button className=\"selected\">All</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<button>Active</button>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<button>Completed</button>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t);\r\n\t}\r\n}\r\n */\t\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport TaskFilter from './TaskFilter';\r\n\r\nconst Footer = (props) => {\r\n\tconsole.log('in Footer filterState ', props.filterState)\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span className=\"todo-count\">\r\n\t\t\t\t\t{props.countItems} items left\r\n\t\t\t</span>\r\n\t\t\t<TaskFilter filterState={props.filterState}\r\n\t\t\t\t\t\tonFilterNameChange={props.onFilterNameChange}/>\r\n\t\t\t<button className=\"clear-completed\"\r\n\t\t\t\t\tonClick={props.onClearCompleted}>\r\n\t\t\t\t\tClear completed</button>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { formatDistanceToNow } from 'date-fns';\r\n\r\nconst Task = (props) => {\r\n    const { task } = props;\r\n        \r\n    return (\r\n        <li className={task.state === 'finished' ? 'completed' : ''}>\r\n            <div className=\"view\">\r\n              <input className=\"toggle\"\r\n                    type=\"checkbox\"\r\n                    name={task.id}\r\n                    checked={task.isChecking}\r\n                    onChange={props.onMarkCompleted} />\r\n              <label>\r\n                  <span className=\"description\">{task.text}</span>\r\n                  <span className=\"created\">\r\n                      created&nbsp;\r\n                      {formatDistanceToNow(\r\n                          new Date(task.created),\r\n                          {includeSeconds: true})}\r\n                        &nbsp;ago</span>\r\n              </label>\r\n              <button className=\"icon icon-edit\"></button>\r\n              <button className=\"icon icon-destroy\" onClick={props.onDeleted}></button>\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Task;","import React from 'react';\r\n\r\nimport Task from './Task';\r\n\r\nclass TaskList extends React.Component {\r\n  /* static defaultProps = {\r\n    filterName: 'all'\r\n  } */\r\n  filteredTasks = (tasks, filterState) => {\r\n    const newTasksList = filterState === 'all' ? tasks : tasks.filter((t) => t.state === filterState);\r\n    return newTasksList;\r\n  }\r\n  render() {\r\n    const { tasksList, onDeleted, onMarkCompleted, filterState } = this.props;\r\n    const tasks = this.filteredTasks(tasksList, filterState);\r\n    return (\r\n      <ul className=\"todo-list\">\r\n        {\r\n          tasks.length > 0 &&\r\n            tasks.map((task) => {\r\n              return (\r\n                <Task onDeleted={onDeleted(task.id)}\r\n                    onMarkCompleted={onMarkCompleted}\r\n                    task={task}\r\n                    key={task.id} />\r\n              )\r\n          })\r\n        }\r\n      </ul>\r\n    );\r\n  }\r\n};\r\n\r\nexport default TaskList;\r\n\r\n/* class TaskList extends React.Component {\r\n  \r\n  render() {\r\n    const { tasksList, onDeleted, onMarkCompleted } = this.props;\r\n    \r\n    return (\r\n      <ul className=\"todo-list\">\r\n        {\r\n          tasksList.length > 0 &&\r\n            tasksList.map((task) => {\r\n              return (\r\n                <Task onDeleted={onDeleted(task.id)}\r\n                    onMarkCompleted={onMarkCompleted}\r\n                    task={task}\r\n                    key={task.id} />\r\n              )\r\n          })\r\n        }\r\n      </ul>\r\n    );\r\n  }\r\n}; */","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nimport NewTaskForm from './NewTaskForm';\r\nimport Footer from './Footer';\r\nimport TaskList from './TaskList';\r\n\r\nclass App extends React.Component {\r\n  /* static defaultProps = {\r\n    filterName: 'all'\r\n  } */\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      valueTask: '',\r\n      tasksList: [],\r\n      filterState: 'all'\r\n    }\r\n  }\r\n\r\n  // ГОТОВЫЕ ФУНКЦИИ - начало\r\n  onChangeValue = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ valueTask: event.target.value });\r\n  }\r\n\r\n  onSubmitTask = (event) => {\r\n    event.preventDefault();\r\n    const { valueTask } = this.state;\r\n    const newTask = {\r\n      id: _.uniqueId(),\r\n      text: valueTask,\r\n      state: 'active',\r\n      isChecking: false,\r\n      created: Date.now()\r\n    };\r\n    this.setState(({ tasksList }) => {\r\n      const newList = [ newTask, ...tasksList ];\r\n      return {\r\n        tasksList: newList,\r\n        valueTask: ''\r\n      };\r\n    });\r\n  }\r\n\r\n  onMarkCompleted = (event) => {\r\n    const name = event.target.name;\r\n    this.setState(({tasksList}) => {\r\n      const index = tasksList.findIndex((task) => task.id === name);\r\n      const oldTask = tasksList[index];\r\n      const newTask = { \r\n        ...oldTask,\r\n        state: oldTask.state === 'active' ? 'finished' : 'active',\r\n        isChecking: !oldTask.isChecking\r\n      };\r\n      const newList = [\r\n        ...tasksList.slice(0, index),\r\n        newTask,\r\n        ...tasksList.slice(index + 1)\r\n      ];\r\n      return { tasksList: newList };\r\n    });\r\n  };\r\n\r\n  onDeleted = (currentId) => (event) => {\r\n    event.preventDefault();\r\n    this.setState(({tasksList}) => {\r\n      const newList = tasksList.filter((task) => task.id !== currentId);\r\n      return { tasksList: newList };\r\n    });\r\n  };\r\n\r\n  onClearCompleted = () => {\r\n    this.setState(({tasksList}) => {\r\n      const newList = tasksList.filter((task) => task.state === 'active');\r\n      return { tasksList: newList };\r\n    });\r\n  };\r\n\r\n  onFilterNameChange = (name) => {\r\n    this.setState({filterState: name});\r\n\t}\r\n\r\n\r\n  // ГОТОВЫЕ ФУНКЦИИ - конец\r\n\r\n\r\n  render() {\r\n    const { tasksList } = this.state;\r\n    const countItems = tasksList.filter((task) => task.state === 'active').length;\r\n\r\n    \r\n    \r\n    return (\r\n      <section className=\"todoapp\">\r\n        <header className=\"header\">\r\n          <h1>todos</h1>\r\n            <NewTaskForm onChangeValue={this.onChangeValue}\r\n                        onSubmitTask={this.onSubmitTask}\r\n                        valueTask={this.state.valueTask} />\r\n        </header>\r\n        <section className=\"main\">\r\n          <TaskList tasksList={this.state.tasksList}\r\n                    onDeleted={this.onDeleted}\r\n                    onMarkCompleted={this.onMarkCompleted}\r\n                    filterState={this.state.filterState} />\r\n          <Footer countItems={countItems}\r\n                  onClearCompleted={this.onClearCompleted}\r\n                  filterState={this.state.filterState}\r\n                  onFilterNameChange={this.onFilterNameChange} />\r\n        </section>  \r\n      </section>\r\n    );\r\n  }\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nimport './style.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}