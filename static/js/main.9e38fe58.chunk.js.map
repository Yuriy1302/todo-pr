{"version":3,"sources":["components/NewTaskForm.jsx","components/TaskFilter.jsx","components/Footer.jsx","components/Task.jsx","components/TaskList.jsx","components/App.jsx","index.js"],"names":["NewTaskForm","props","onSubmit","onSubmitTask","className","onChange","onChangeValue","value","valueTask","placeholder","autoFocus","required","defaultProps","filters","TaskFilter","onClick","e","preventDefault","onFilterNameChange","target","name","renderFilterButtons","filterState","filterName","classNames","key","type","data-test","state","isClick","this","map","el","React","Component","Footer","countItems","onClearCompleted","Task","setState","editValue","onSaveTask","title","currentTarget","id","onSaveEditing","editMode","onSaveTaskSubmit","onEditeMode","task","text","checked","isChecking","onMarkCompleted","formatDistanceToNow","Date","created","includeSeconds","onDeleted","onBlur","TaskList","filteredTasks","tasks","filter","t","tasksList","length","App","event","newTask","_","uniqueId","now","index","findIndex","oldTask","slice","currentId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e38fe58.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst NewTaskForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.onSubmitTask}>\r\n      <input className=\"new-todo\"\r\n            onChange={props.onChangeValue}\r\n            value={props.valueTask}\r\n            placeholder=\"What needs to be done?\"\r\n            autoFocus\r\n            required />\r\n    </form>\r\n  );\r\n};\r\n\r\nNewTaskForm.defaultProps = {\r\n  onSubmit: () => {},\r\n}\r\n\r\nexport default NewTaskForm;\r\n","import React from 'react';\r\n\r\nconst filters = [['all', 'All'], ['active', 'Active'], ['finished', 'Completed']];\r\n\r\nclass TaskFilter extends React.Component {\r\n\t\r\n\tstatic defaultProps = {\r\n\t\tfilterState: () => {},\r\n\t}\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state ={\r\n\t\t\tisClick: this.props.filterState,\r\n\t\t}\r\n\t}\r\n\t\r\n\tonClick = (e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.onFilterNameChange(e.target.name);\r\n\t}\t\r\n\r\n\trenderFilterButtons = ([filterName, name], filterState) => {\r\n\t\tconst classNames = filterName === filterState ? 'selected' : '';\r\n\t\treturn (\r\n\t\t\t<li key={filterName}>\r\n\t\t\t\t<button type=\"button\"\r\n\t\t\t\t\t\t\t\tclassName={classNames}\r\n\t\t\t\t\t\t\t\tname={filterName}\r\n\t\t\t\t\t\t\t\tdata-test={`task-filter-${filterName}`}\r\n\t\t\t\t\t\t\t\tonClick={this.onClick}\r\n\t\t\t\t>\r\n\t\t\t\t\t{name}\r\n\t\t\t\t</button>\r\n\t\t\t</li>\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst filterState = this.props.filterState;\r\n\t\treturn (\r\n\t\t\t<ul className=\"filters\">\r\n\t\t\t\t{filters.map(el => this.renderFilterButtons(el, filterState))}\r\n\t\t\t</ul>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default TaskFilter;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TaskFilter from './TaskFilter';\r\n\r\nconst Footer = (props) => {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span className=\"todo-count\">\r\n\t\t\t\t\t{props.countItems} items left\r\n\t\t\t</span>\r\n\t\t\t<TaskFilter filterState={props.filterState}\r\n\t\t\t\t\t\tonFilterNameChange={props.onFilterNameChange}/>\r\n\t\t\t<button className=\"clear-completed\"\r\n\t\t\t\t\tonClick={props.onClearCompleted}>\r\n\t\t\t\t\tClear completed</button>\r\n\t\t</footer>\r\n\t);\r\n};\r\n\r\nFooter.defaultProps = {\r\n\tfilterState: () => {},\r\n\tonFilterNameChange: () => {},\r\n\tonClearCompleted: () => {},\r\n}\r\n\r\nFooter.propTypes = {\r\n\tcountItems: PropTypes.number\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { formatDistanceToNow } from 'date-fns';\r\n\r\nclass Task extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\teditMode: false,\r\n\t\t\teditValue: `${props.task.text}`\r\n\t\t}\r\n\t}\r\n\r\n\tonChange = (e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.setState({ editValue: e.target.value });\r\n\t}\r\n\r\n\tonSaveTask = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst title = e.currentTarget.value;\r\n\t\tconst id = e.currentTarget.name;\r\n\t\tthis.props.onSaveEditing(id, title);\r\n\t\tthis.setState({ editMode: !this.state.editMode });\r\n\r\n\t}\r\n\r\n\tonSaveTaskSubmit = (id, title) => (e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.onSaveEditing(id, title);\r\n\t\tthis.setState({ editMode: !this.state.editMode });\r\n\t}\r\n\r\n\tonEditeMode = () => {\r\n\t\tthis.setState({ editMode: !this.state.editMode });\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst { task } = this.props;\r\n\t\t\r\n\t\tlet classNames = '';\r\n\t\tif (task.state === 'finished') {\r\n\t\t\tclassNames = 'completed';\r\n\t\t} else {\r\n\t\t\tclassNames = ''\r\n\t\t}\r\n\r\n\t\tif (this.state.editMode) {\r\n\t\t\tclassNames = 'editing';\r\n\t\t}\r\n        \r\n    return (\r\n        <li className={classNames}>\r\n            <div className=\"view\">\r\n              <input className=\"toggle\"\r\n                    type=\"checkbox\"\r\n                    name={task.id}\r\n                    checked={task.isChecking}\r\n                    onChange={this.props.onMarkCompleted} />\r\n              <label>\r\n                  <span className=\"description\">\r\n                      {task.text}\r\n                  </span>\r\n                  <span className=\"created\">\r\n                      created&nbsp;\r\n                      {formatDistanceToNow(\r\n                          new Date(task.created),\r\n                          {includeSeconds: true})}\r\n                        &nbsp;ago</span>\r\n              </label>\r\n              <button className=\"icon icon-edit\" name={task.id} onClick={this.onEditeMode}></button>\r\n              <button className=\"icon icon-destroy\" onClick={this.props.onDeleted}></button>\r\n            </div>\r\n\t\t\t\t\t\t{this.state.editMode && \r\n\t\t\t\t\t\t\t<form onSubmit={this.onSaveTaskSubmit(task.id, this.state.editValue)}>\r\n\t\t\t\t\t\t\t\t<input type=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"edit\"\r\n\t\t\t\t\t\t\t\t\t\tname={task.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.editValue}\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t\t\tonBlur={this.onSaveTask}\r\n\t\t\t\t\t\t\t\t\t\tautoFocus />\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t}\r\n        </li>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Task;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Task from './Task';\r\n\r\nclass TaskList extends React.Component {\r\n  static defaultProps = {\r\n    onMarkCompleted: () => {},\r\n    filterState: 'all',\r\n  }\r\n  \r\n  static propTypes = {\r\n    tasksList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onDeleted: PropTypes.func.isRequired,\r\n    onMarkCompleted: PropTypes.func,\r\n  }\r\n\r\n  filteredTasks = (tasks, filterState) => {\r\n    const newTasksList = filterState === 'all' ? tasks : tasks.filter((t) => t.state === filterState);\r\n    return newTasksList;\r\n  }\r\n\r\n  render() {\r\n    const { tasksList, onDeleted, onMarkCompleted, filterState } = this.props;\r\n    const tasks = this.filteredTasks(tasksList, filterState);\r\n    return (\r\n      <ul className=\"todo-list\">\r\n        {\r\n          tasks.length > 0 &&\r\n            tasks.map((task) => {\r\n              return (\r\n                <Task onDeleted={onDeleted(task.id)}\r\n                    onMarkCompleted={onMarkCompleted}\r\n                    task={task}\r\n                    key={task.id}\r\n                    onSaveEditing={this.props.onSaveEditing} />\r\n              )\r\n          })\r\n        }\r\n      </ul>\r\n    );\r\n  }\r\n};\r\n\r\nexport default TaskList;\r\n\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nimport NewTaskForm from './NewTaskForm';\r\nimport Footer from './Footer';\r\nimport TaskList from './TaskList';\r\n\r\nclass App extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      valueTask: '',\r\n      tasksList: [],\r\n      filterState: 'all',\r\n    }\r\n  }\r\n\r\n  onChangeValue = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ valueTask: event.target.value });\r\n  }\r\n\r\n  onSubmitTask = (event) => {\r\n    event.preventDefault();\r\n    const { valueTask } = this.state;\r\n    const newTask = {\r\n      id: _.uniqueId(),\r\n      text: valueTask,\r\n      state: 'active',\r\n      isChecking: false,\r\n      created: Date.now()\r\n    };\r\n    this.setState(({ tasksList }) => {\r\n      const newList = [ newTask, ...tasksList ];\r\n      return {\r\n        tasksList: newList,\r\n        valueTask: ''\r\n      };\r\n    });\r\n  }\r\n\r\n  onMarkCompleted = (event) => {\r\n    const name = event.target.name;\r\n    this.setState(({tasksList}) => {\r\n      const index = tasksList.findIndex((task) => task.id === name);\r\n      const oldTask = tasksList[index];\r\n      const newTask = { \r\n        ...oldTask,\r\n        state: oldTask.state === 'active' ? 'finished' : 'active',\r\n        isChecking: !oldTask.isChecking\r\n      };\r\n      const newList = [\r\n        ...tasksList.slice(0, index),\r\n        newTask,\r\n        ...tasksList.slice(index + 1)\r\n      ];\r\n      return { tasksList: newList };\r\n    });\r\n  };\r\n\r\n  onDeleted = (currentId) => (event) => {\r\n    event.preventDefault();\r\n    this.setState(({tasksList}) => {\r\n      const newList = tasksList.filter((task) => task.id !== currentId);\r\n      return { tasksList: newList };\r\n    });\r\n  };\r\n\r\n  onClearCompleted = () => {\r\n    this.setState(({tasksList}) => {\r\n      const newList = tasksList.filter((task) => task.state === 'active');\r\n      return { tasksList: newList };\r\n    });\r\n  };\r\n\r\n  onFilterNameChange = (name) => {\r\n    this.setState({filterState: name});\r\n  }\r\n  \r\n  onSaveEditing = (id, title) => {\r\n    this.setState(({tasksList}) => {\r\n      const index = tasksList.findIndex((task) => task.id === id);\r\n      const oldTask = tasksList[index];\r\n      const newTask = { \r\n        ...oldTask,\r\n        text: title\r\n      };\r\n      const newList = [\r\n        ...tasksList.slice(0, index),\r\n        newTask,\r\n        ...tasksList.slice(index + 1)\r\n      ];\r\n      return { tasksList: newList };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { tasksList } = this.state;\r\n    const countItems = tasksList.filter((task) => task.state === 'active').length;\r\n\r\n    return (\r\n      <section className=\"todoapp\">\r\n        <header className=\"header\">\r\n          <h1>todos</h1>\r\n            <NewTaskForm onChangeValue={this.onChangeValue}\r\n                        onSubmitTask={this.onSubmitTask}\r\n                        valueTask={this.state.valueTask} />\r\n        </header>\r\n        <section className=\"main\">\r\n          <TaskList tasksList={this.state.tasksList}\r\n                    onDeleted={this.onDeleted}\r\n                    onMarkCompleted={this.onMarkCompleted}\r\n                    filterState={this.state.filterState}\r\n                    onSaveEditing={this.onSaveEditing} />\r\n          <Footer countItems={countItems}\r\n                  onClearCompleted={this.onClearCompleted}\r\n                  filterState={this.state.filterState}\r\n                  onFilterNameChange={this.onFilterNameChange} />\r\n        </section>  \r\n      </section>\r\n    );\r\n  }\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nimport './style.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}